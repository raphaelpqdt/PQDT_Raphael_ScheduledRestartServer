# PQDT_Raphael Server Auto-Restarter

O PredPy Server Auto-Restarter √© uma aplica√ß√£o de interface gr√°fica (GUI) projetada para monitorar logs de m√∫ltiplos servidores e reiniciar automaticamente os servi√ßos associados do Windows com base em mensagens de gatilho nos logs ou em hor√°rios agendados.

Ele √© constru√≠do usando Python com Tkinter e ttkbootstrap para a interface gr√°fica, e oferece funcionalidades robustas para administradores de servidores que precisam de uma maneira automatizada de garantir a disponibilidade de seus servi√ßos.

## ‚ú® Funcionalidades Principais

* **Gerenciamento Multi-Servidor:**
    * Configure e monitore m√∫ltiplos servidores, cada um em sua pr√≥pria aba dedicada.
    * Adicione, remova e renomeie configura√ß√µes de servidor dinamicamente.
* **Monitoramento de Logs em Tempo Real:**
    * Exibe logs de `console.log` (localizados em subpastas como `logs_AAAA-MM-DD_HH-MM-SS`) em tempo real.
    * Filtro de log para exibir apenas linhas relevantes (case-insensitive).
    * Pause/Retome o acompanhamento ao vivo dos logs.
    * Busca de texto dentro da √°rea de log da aba.
    * Rolagem autom√°tica opcional para o final do log.
* **Rein√≠cio Autom√°tico de Servi√ßos (Windows):**
    * **Baseado em Gatilho:**
        * Defina uma mensagem de log espec√≠fica que, ao ser detectada, acionar√° o rein√≠cio do servi√ßo.
        * Configure um atraso (em segundos) ap√≥s a detec√ß√£o do gatilho antes de iniciar o processo de rein√≠cio.
        * Defina atrasos para parada e in√≠cio do servi√ßo durante o ciclo de rein√≠cio.
    * **Baseado em Agendamento:**
        * Configure rein√≠cios em hor√°rios pr√©-definidos (de hora em hora).
        * Adicione hor√°rios de rein√≠cio personalizados (HH:MM).
* **Integra√ß√£o com Servi√ßos do Windows:**
    * Selecione o servi√ßo do Windows associado a cada configura√ß√£o de servidor.
    * Exibe o status atual do servi√ßo (Rodando, Parado, etc.).
    * Utiliza `sc.exe` para parar e iniciar servi√ßos. (Requer `pywin32`)
* **Interface Gr√°fica Amig√°vel:**
    * Interface moderna e tem√°tica com `ttkbootstrap`.
    * M√∫ltiplos temas visuais selecion√°veis.
    * Barra de menu para f√°cil acesso √†s funcionalidades.
    * Barra de status para feedback ao usu√°rio.
    * √çcone de aplica√ß√£o personalizado e imagem de fundo (opcional).
* **Minimizar para a Bandeja do Sistema:**
    * A aplica√ß√£o pode ser minimizada para a bandeja do sistema ao inv√©s de ser fechada. (Requer `Pillow` e `pystray`)
* **Configura√ß√£o Persistente:**
    * As configura√ß√µes da aplica√ß√£o e dos servidores s√£o salvas em um arquivo `server_restarter_config.json`.
    * Carregue e salve arquivos de configura√ß√£o.
* **Logging da Aplica√ß√£o:**
    * A pr√≥pria aplica√ß√£o registra suas opera√ß√µes e erros em `server_restarter.log`.
    * Uma aba "Log do Sistema (Restarter)" exibe o conte√∫do deste arquivo.
* **Exporta√ß√£o de Logs:**
    * Exporte o conte√∫do da √°rea de log da aba atual (servidor ou sistema) para um arquivo de texto.

## üîß Pr√©-requisitos

* Python 3.x
* Bibliotecas Python (podem ser instaladas via pip):
    * `ttkbootstrap` (para a interface gr√°fica moderna)
    * `Pillow (PIL)` (para √≠cones personalizados, imagem de fundo e √≠cone da bandeja)
    * `pystray` (para funcionalidade de √≠cone da bandeja do sistema)
    * `pywin32` (essencial para gerenciamento de servi√ßos do Windows; opcional em outros sistemas, mas a funcionalidade principal de rein√≠cio ser√° desabilitada)



## üèÉ Como Usar

1.  Execute o programa .exe
    ```

2.  **Interface Principal:**
    * A janela principal exibir√° abas. Inicialmente, pode haver uma aba "Servidor 1 (Padr√£o)" e uma aba "Log do Sistema (Restarter)".
    * Use o menu "Servidores" > "Adicionar Novo Servidor" para criar novas configura√ß√µes de servidor.
    * Use "Servidores" > "Remover Servidor Atual" ou "Renomear Servidor Atual..." conforme necess√°rio.

3.  **Configurando uma Aba de Servidor:**
    * **Pasta de Logs:** Clique em "Pasta de Logs" para selecionar a pasta raiz onde os logs do seu servidor s√£o armazenados (ex: a pasta que cont√©m as subpastas `logs_AAAA-MM-DD_HH-MM-SS/`).
    * **Servi√ßo Win:** Clique em "Servi√ßo Win" para selecionar o servi√ßo do Windows associado a este servidor (requer `pywin32`). O status do servi√ßo ser√° exibido.
    * **Filtro:** Digite um texto para filtrar as linhas de log exibidas na √°rea de log.
    * **Controles de Log:** Use "Pausar/Retomar" e "Limpar Log" para controlar a exibi√ß√£o.
    * **Op√ß√µes de Rein√≠cio (Gatilho):**
        * Marque "Reiniciar servidor automaticamente..." para habilitar o rein√≠cio por gatilho.
        * Configure a "Mensagem de Log para Gatilho" exata que deve ser detectada.
        * Ajuste os "Delays" para o rein√≠cio, parada do servi√ßo e in√≠cio do servi√ßo.
    * **Rein√≠cios Agendados:**
        * Marque os hor√°rios pr√©-definidos (HH:00) desejados.
        * Adicione hor√°rios personalizados (HH:MM) na se√ß√£o correspondente.

4.  **Menu Arquivo:**
    * "Salvar Configura√ß√£o": Salva o estado atual de todas as abas de servidor e o tema no arquivo `server_restarter_config.json`.
    * "Carregar Configura√ß√£o...": Permite carregar um arquivo de configura√ß√£o `.json` previamente salvo.
    * "Sair": Fecha a aplica√ß√£o.

5.  **Menu Ferramentas:**
    * "Exportar Logs da Aba Atual": Salva o conte√∫do da √°rea de log da aba selecionada (servidor ou sistema) em um arquivo de texto.
    * "Mudar Tema": Permite selecionar diferentes temas visuais fornecidos pelo `ttkbootstrap`.

6.  **Minimizar para Bandeja:**
    * Se `Pillow` e `pystray` estiverem instalados, clicar no bot√£o "X" da janela minimizar√° a aplica√ß√£o para a bandeja do sistema.
    * Clique com o bot√£o direito no √≠cone da bandeja para "Mostrar" ou "Sair".

## ‚öôÔ∏è Configura√ß√£o

* **Arquivo Principal de Configura√ß√£o:** `server_restarter_config.json`
    * Este arquivo √© criado/atualizado automaticamente quando voc√™ salva a configura√ß√£o pelo menu "Arquivo".
    * Ele armazena as configura√ß√µes de cada aba de servidor (caminhos, nome do servi√ßo, mensagem de gatilho, delays, agendamentos) e o tema selecionado.
* **√çcones e Imagens:**
    * √çcone da aplica√ß√£o: `predpy.ico`
    * Imagem de fundo: `predpy.png`
    * Estes arquivos devem estar presentes no mesmo diret√≥rio do script ou empacotados corretamente se voc√™ criar um execut√°vel. O alfa da imagem de fundo pode ser ajustado pela constante `BACKGROUND_ALPHA_MULTIPLIER`.

## üìÑ Arquivos de Log

* **Log da Aplica√ß√£o:** `server_restarter.log`
    * Cont√©m informa√ß√µes sobre as opera√ß√µes do pr√≥prio PredPy Server Auto-Restarter, incluindo inicializa√ß√£o, detec√ß√£o de gatilhos, erros, etc.
* **Logs do Servidor Monitorado:**
    * A aplica√ß√£o espera encontrar arquivos `console.log` dentro de subpastas com o padr√£o `logs_AAAA-MM-DD_HH-MM-SS` na "Pasta de Logs" configurada para cada servidor.

A funcionalidade principal de **rein√≠cio de servi√ßo** depende da biblioteca `pywin32` e do uso do comando `sc.exe`, o que a torna **primariamente destinada ao Windows**.
A interface gr√°fica pode rodar em outros sistemas operacionais (Linux, macOS), mas as funcionalidades de gerenciamento de servi√ßos do Windows estar√£o desabilitadas.

---

Desenvolvido por PQDT_Raphael